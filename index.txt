const express = require('express');
const cors = require('cors'); // Import cors
const { predict, trainModel } = require('./model'); // Import functions from model.js

const app = express();
app.use(cors()); // Enable CORS for all routes
app.use(express.json()); // Middleware to parse JSON requests

// Route to train the model
app.post('/train', async (req, res) => {
    try {
        const { userInfo, dailyData } = req.body;

        if (!userInfo || !dailyData) {
            return res.status(400).json({ message: 'Missing user information or daily data.' });
        }

        // Calculate the average duration from dailyData
        const totalDuration = dailyData.reduce((acc, entry) => acc + entry.duration, 0);
        const averageDuration = totalDuration / dailyData.length; // Calculate average

        // Optionally, you can call the training function here if needed
        await trainModel(dailyData); // Train the model (if needed for your use case)

        res.status(200).json({ 
            message: 'Training completed successfully.', 
            averageDuration, // Include average duration in the response
            showDiagnosis: averageDuration <= 5 // Set showDiagnosis based on averageDuration
        });
    } catch (error) {
        console.error('Error during training:', error);
        res.status(500).json({ message: 'Training failed.' });
    }
});

// Route to predict sleep quality
app.post('/predict', async (req, res) => {
    try {
        const { duration, activity, stress } = req.body;

        if (duration == null || activity == null || stress == null) {
            return res.status(400).json({ message: 'Missing input parameters.' });
        }

        const predictedQuality = await predict([duration, activity, stress]); // Predict using model
        res.status(200).json({ predictedQuality });
    } catch (error) {
        console.error('Error during prediction:', error);
        res.status(500).json({ message: 'Error making prediction.' });
    }
});

// Server listening on port 5000
const PORT = process.env.PORT || 5000;
app.listen(PORT, () => console.log(`Server running on http://localhost:${PORT}`));
